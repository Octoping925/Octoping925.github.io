/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as HotsTeamRouteImport } from './routes/hots-team'
import { Route as ExpCoreCalcRouteImport } from './routes/exp-core-calc'
import { Route as CoreCalcRouteImport } from './routes/core-calc'
import { Route as IndexRouteImport } from './routes/index'

const HotsTeamRoute = HotsTeamRouteImport.update({
  id: '/hots-team',
  path: '/hots-team',
  getParentRoute: () => rootRouteImport,
} as any)
const ExpCoreCalcRoute = ExpCoreCalcRouteImport.update({
  id: '/exp-core-calc',
  path: '/exp-core-calc',
  getParentRoute: () => rootRouteImport,
} as any)
const CoreCalcRoute = CoreCalcRouteImport.update({
  id: '/core-calc',
  path: '/core-calc',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/core-calc': typeof CoreCalcRoute
  '/exp-core-calc': typeof ExpCoreCalcRoute
  '/hots-team': typeof HotsTeamRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/core-calc': typeof CoreCalcRoute
  '/exp-core-calc': typeof ExpCoreCalcRoute
  '/hots-team': typeof HotsTeamRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/core-calc': typeof CoreCalcRoute
  '/exp-core-calc': typeof ExpCoreCalcRoute
  '/hots-team': typeof HotsTeamRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/core-calc' | '/exp-core-calc' | '/hots-team'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/core-calc' | '/exp-core-calc' | '/hots-team'
  id: '__root__' | '/' | '/core-calc' | '/exp-core-calc' | '/hots-team'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  CoreCalcRoute: typeof CoreCalcRoute
  ExpCoreCalcRoute: typeof ExpCoreCalcRoute
  HotsTeamRoute: typeof HotsTeamRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/hots-team': {
      id: '/hots-team'
      path: '/hots-team'
      fullPath: '/hots-team'
      preLoaderRoute: typeof HotsTeamRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/exp-core-calc': {
      id: '/exp-core-calc'
      path: '/exp-core-calc'
      fullPath: '/exp-core-calc'
      preLoaderRoute: typeof ExpCoreCalcRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/core-calc': {
      id: '/core-calc'
      path: '/core-calc'
      fullPath: '/core-calc'
      preLoaderRoute: typeof CoreCalcRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  CoreCalcRoute: CoreCalcRoute,
  ExpCoreCalcRoute: ExpCoreCalcRoute,
  HotsTeamRoute: HotsTeamRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
